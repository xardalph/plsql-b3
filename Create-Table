
DROP TABLE TMAIL;
DROP TABLE TMAILS_LOGS;
DROP TABLE TMAILS_SEND_HISTO;
    
CREATE TABLE  TMAIL (
    id INT GENERATED ALWAYS AS IDENTITY,
    objet varchar(255),
    texte varchar(255),
    destTo VARCHAR2(255), 
    destCC VARCHAR(255), 
    destBCC VARCHAR(255),
    dateEnvoi TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE TABLE TMAILS_LOGS (
    id INT GENERATED ALWAYS AS IDENTITY,
    dateEnvoi TIMESTAMP,
    message VARCHAR2(255),
    PRIMARY KEY (id)
);


CREATE TABLE TMAILS_SEND_HISTO (
    id INT GENERATED ALWAYS AS IDENTITY,
    idmail INT,
    dateEnvoi TIMESTAMP,
    statusEnvoi  NUMBER(1,0),
    CONSTRAINT mail_fk FOREIGN KEY (idmail) REFERENCES TMAIL(id),
    PRIMARY KEY (id)
);

CREATE OR REPLACE PACKAGE package_structures AS
    EMAIL_EXCEPTION EXCEPTION;
    TYPE RMAIL IS RECORD (objet VARCHAR2(50), texte VARCHAR2(255), destTo VARCHAR2(255), destCC VARCHAR(255), destBCC VARCHAR(255), dateEnvoi TIMESTAMP);
    TYPE TAB_RMAIL IS TABLE OF RMAIL;
    PROCEDURE createMails(mail in RMAIL);
    PROCEDURE checkMail(idMail in INT);
    
  
END package_structures;
/


CREATE OR REPLACE PACKAGE BODY package_structures AS

 PROCEDURE send_mail (p_from      IN VARCHAR2,
                                       p_smtp_host IN VARCHAR2,
                                       p_smtp_port IN NUMBER DEFAULT 25)
AS
  l_mail_conn   UTL_SMTP.connection;
  l_smtp_host VARCHAR2(255);
  l_smtp_port VARCHAR2(255);
  IDMAIL INT;
  
  CURSOR c_mail(IDMAIL INT) IS 
  SELECT * from TMAIL WHERE id = IDMAIL;
  
  
  
PROCEDURE process_recipients(p_mail_conn IN OUT UTL_SMTP.connection,
                               p_list      IN     VARCHAR2)
  AS
    l_tab string_api.t_split_array;
  BEGIN
    IF TRIM(p_list) IS NOT NULL THEN
      l_tab := string_api.split_text(p_list);
      FOR i IN 1 .. l_tab.COUNT LOOP
        UTL_SMTP.rcpt(p_mail_conn, TRIM(l_tab(i)));
      END LOOP;
    END IF;
  END;
  
BEGIN
    l_mail_conn := UTL_SMTP.open_connection(l_smtp_host, l_smtp_port);

    UTL_SMTP.write_data(l_mail_conn, 'Date: ' || TO_CHAR(SYSDATE, 'DD-MON-YYYY HH24:MI:SS') || UTL_TCP.crlf);
    UTL_SMTP.helo(l_mail_conn, l_smtp_host);
    
    UTL_SMTP.mail(l_mail_conn, p_from);
    
    UTL_SMTP.rcpt(l_mail_conn, mail);
        
    process_recipients(l_mail_conn, c_mail.destTO);
    process_recipients(l_mail_conn, c_mail.destCC);
    process_recipients(l_mail_conn, c_mail.destBCC);
    
    UTL_SMTP.write_data(l_mail_conn, 'To: ' || c_mail.destTO || UTL_TCP.crlf);
    IF TRIM(c_mail.destCC) IS NOT NULL THEN
        UTL_SMTP.write_data(l_mail_conn, 'CC: ' || REPLACE(c_mail.destCC, ',', ';') || UTL_TCP.crlf);        
    END IF;            
    IF TRIM(c_mail.destBCC) IS NOT NULL THEN
        UTL_SMTP.write_data(l_mail_conn, 'BCC: ' || REPLACE(c_mail.destBCC, ',', ';') || UTL_TCP.crlf);
    END IF;
    
    UTL_SMTP.write_data(l_mail_conn, 'From: ' || p_from || UTL_TCP.crlf);  
    
    UTL_SMTP.write_data(l_mail_conn, 'Subject: ' || c_mail.object || UTL_TCP.crlf);
    UTL_SMTP.write_data(l_mail_conn, 'Reply-To: ' || p_from || UTL_TCP.crlf || UTL_TCP.crlf);  
    
    UTL_SMTP.write_data(l_mail_conn, c_mail.message || UTL_TCP.crlf || UTL_TCP.crlf);
    UTL_SMTP.close_data(l_mail_conn);

    UTL_SMTP.quit(l_mail_conn);
    
  EXCEPTION
 WHEN utl_smtp.Transient_Error OR utl_smtp.Permanent_Error then
   raise_application_error(-20000, 'Unable to send mail', TRUE);
END;







PROCEDURE createMails(
    mail in RMAIL 
)

IS 
mail RMAIL;

BEGIN
    INSERT INTO TMAIL
        (objet, texte, destTo, destCC, destBCC)
    VALUES
        (mail.objet,
        mail.texte,
        mail.destTo,
        mail.destCC,
        mail.destBCC);

END;


PROCEDURE checkMail(
    idMail in INT 
)
IS
EMAIL_EXCEPTION EXCEPTION;
BEGIN
    IF utl_smtp.Transient_Error OR utl_smtp.Permanent_Error THEN 
        RAISE EMAIL_EXCEPTION; 
    ELSE
        SELECT id 
        FROM destinataires
        WHERE id = idMail;
    END IF;
EXCEPTION
   WHEN EMAIL_EXCEPTION 
    THEN raise_application_error(-20307, 'Email inconnu', TRUE);
END;

PROCEDURE cleanMails(
    dateMax in DATETIME
)
IS
BEGIN
    DELETE 
    FROM TMAILS_SEND_HISTO
    WHERE dateMax > TMAILS_SEND_HISTO.date
    ;
END;


END;
/
